object.defineproperty：
三个参数： 1、obj-要在其上定义属性的对象  2、prop-要定义或修改的属性的名称  3、descriptor-将被定义或修改的属性描述符

整个对象的操作都在descriptor中进行，他接受一个对象参数，对象参数支持六个属性
这里我们只需要四个，示例如下：
Object.defineProperty(obj,key, {
	enumerable: true,
	configurable: true,
	get: function () {},
	set: function () {}
})

enumerable：当且仅当该属性的enumerable为true时，该属性才能够出现咋对象的枚举属性中，默认为false
configurable： 当且仅当该属性的configurable为true时，该属性描述符才能够被改变，同时该属性也能从对应的对象上被删除。默认为false
get： 当读取属性时调用
set： 当属性值改变时调用

属性描述符：
对象里目前存在的属性描述符有两种主要形式：数据描述符和存取描述符。数据描述符是一个具有值的属性，可写可不写；
存取描述符是由getter-setter函数对描述的属性。描述符必须是这两种形式之一；但不能同时是两者

数据描述符和存取描述符均有以下可选键值：
configurable、enumerable、value、writable、get、set。
如果一个描述符不具有value，writable，get和set任意一个关键字，那么他将被认为是一个数据描述符。
如果一个描述符同时有value或writable和get或set关键字，将会产生一个异常。
这些选项不一定是自身属性，如果是继承来的也要考虑。
object.为了prototype确认保留这些默认值，你可能要在这之前冻结，明确指定所有的选项，
或者通过object.create(null)将_proto_属性指向null